version: '3' 

services:
# MySQLのサービス
  db:
    image: mysql:8
    container_name: "spring_db"
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/sql/:/docker-entrypoint-initdb.d
      - ./mysql/settings/:/var/lib/mysql
      - ./mysql/sql/mysql.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_DATABASE: "demo"
      MYSQL_USER: "demo"
      MYSQL_PASSWORD: "demo"
      MYSQL_ROOT_USER: "root"
      MYSQL_ROOT_PASSWORD: "root"
      TZ: "Asia/Tokyo"

# springアプリケーションのサービス
  spring:
    image: mtaketani113/spring-boot-demo:0.0.14
    container_name: "spring"
    ports:
      - "8080:8080"
    tty: true
    depends_on:
      - db
    volumes:
      - ./my-workbook:/srv:cached
    working_dir: /srv
    environment:
      DATASOURCE_URL: "jdbc:mysql://db:3306/demo"
      HTTP_PROXY_HOST: ${HTTP_PROXY_HOST}
      HTTP_PROXY_PORT: ${HTTP_PROXY_PORT}
  app:
    container_name: react-web-app
    image: node:17-alpine
    volumes:
      - ./:/app
    working_dir: /app
    command: sh -c "npm install --legacy-peer-deps && npm run start_docker"
    ports:
      - '3000:3000'
    depends_on:
      - spring